# Default .cf.build.yml file
#
# This file provides an entry point into the build tooling provided by
# common-frontend. The build tool itself is essentially a wrapper
# around webpack providing sensible defaults for module bundling etc
#
# Notes on 'resolve root':
# If this file is used as part of builds from the cli, where 'resolve root'
# is mentioned it will be the directory in which this file exists.
# If used via the node api, the resolve root can be set as required in the
# BuildConfig class

# Build configuration definition
#   - Configures the webpack build
#
# Settings:
#   - context:
#       The build context, either absolute or relative to a given resolve root.
#       https://webpack.js.org/configuration/entry-context/#context
#   - entry:
#       The build entry points.
#       Objects key represent output name where values are the entry files
#       relative to the build context
#       https://webpack.js.org/configuration/entry-context/#entry
#   - output.path
#       The output path either absolute or relative to the resolve root.
#       https://webpack.js.org/configuration/output/#outputpath
#   - output.filename
#       The default file name of each output bundle.
#       If providing multiple entry points this value must be tokenized.
#       https://webpack.js.org/configuration/output/#outputfilename
#   - output.public_path
#       The relative path from output bundle paths to the assets such as
#       images etc.
#       For example, css bundled to ./css/style.css. Images exist at
#       ./images/image.png. Public path from style.css to images
#       directory: '../'
#       https://webpack.js.org/configuration/output/#outputpublicpath
build:
    context: src
    entry: {}
    output:
        path: dist
        filename: bundle.js
        public_path: ''

# External configuration definitions
#   - Helps tie in external assets into the build
#
# Settings:
#   - aliases
#       An object of alias names against the absolute directories they should
#       resolved too.
#       https://webpack.js.org/configuration/resolve/#resolvealias
#   - fonts
#       A flat array of font path stubs for external fonts.
#       For example /node_modules/bootstrap_glyphicons
external:
    aliases: {}
    fonts: []

# Build processing configuration definitions
#   - Determines how source assets should be processed etc.
#
# Settings:
#   - image_min
#       An object of imagemin optimisation values
#       Configuration passed here is passed to the imagemin plugin as is.
#       https://www.npmjs.com/package/imagemin-webpack-plugin
processing:
    image_min:
        optipng:
            optimizationLevel: 7
        gifsicle:
            optimizationLevel: 3
        jpegtran:
            progressive: true,
            arithmetic: true
        svgo: {}

# Structural build configuration
#   - Defines source structure, used during build to avoid module overlap
#
# Settings:
#   - font_dir
#       The name of the font directory in source files
#       Fonts will be output into a folder of this name
#   - image_dir
#       The name of the image directory in source files
#       Images will be output into a folder of this name
structure:
    font_dir: fonts
    image_dir: images
